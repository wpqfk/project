{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qtkdd\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\wpqkf2_project\\\\test\\\\src\\\\pages\\\\Mypage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPage = () => {\n  _s();\n  const [userInfo, setUserInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // 컴포넌트가 마운트되면 사용자의 정보를 가져옵니다.\n  useEffect(() => {\n    const token = localStorage.getItem('token'); // 'token'은 저장된 토큰의 키 이름입니다.\n\n    if (!token) {\n      setError('토큰이 없습니다. 로그인 후 다시 시도해주세요.');\n      setLoading(false);\n      return;\n    }\n    const fetchUserInfo = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/mypage', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}` // 토큰이 있으면 Authorization 헤더에 추가\n          }\n        });\n        if (!response.ok) {\n          // 예외 처리: 응답 상태 코드가 200이 아닐 경우\n          const errorData = await response.json();\n          throw new Error(errorData.error || '사용자 정보를 가져오는 데 실패했습니다.');\n        }\n        const data = await response.json();\n        setUserInfo(data);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message); // 오류 메시지를 상태에 저장\n        setLoading(false);\n      }\n    };\n    fetchUserInfo();\n  }, []); // 빈 배열을 넣어서 컴포넌트가 마운트될 때만 실행되게 함\n\n  // 로딩 중, 에러 처리 및 사용자 정보 표시\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC624\\uB958 \\uBC1C\\uC0DD: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC0AC\\uC6A9\\uC790 \\uC815\\uBCF4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), userInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC774\\uB984: \", userInfo.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC774\\uBA54\\uC77C: \", userInfo.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC0AC\\uC6A9\\uC790 \\uC815\\uBCF4\\uB97C \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(MyPage, \"iIZjHdo4dQKyK+HkpX1jOwNhFhw=\");\n_c = MyPage;\nexport default MyPage;\nvar _c;\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MyPage","_s","userInfo","setUserInfo","loading","setLoading","error","setError","token","localStorage","getItem","fetchUserInfo","response","fetch","method","headers","Authorization","ok","errorData","json","Error","data","message","children","fileName","_jsxFileName","lineNumber","columnNumber","name","email","_c","$RefreshReg$"],"sources":["C:/Users/qtkdd/OneDrive/바탕 화면/wpqkf2_project/test/src/pages/Mypage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst MyPage = () => {\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // 컴포넌트가 마운트되면 사용자의 정보를 가져옵니다.\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');  // 'token'은 저장된 토큰의 키 이름입니다.\r\n\r\n    if (!token) {\r\n      setError('토큰이 없습니다. 로그인 후 다시 시도해주세요.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchUserInfo = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/mypage', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,  // 토큰이 있으면 Authorization 헤더에 추가\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          // 예외 처리: 응답 상태 코드가 200이 아닐 경우\r\n          const errorData = await response.json();\r\n          throw new Error(errorData.error || '사용자 정보를 가져오는 데 실패했습니다.');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setUserInfo(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error.message);  // 오류 메시지를 상태에 저장\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserInfo();\r\n  }, []);  // 빈 배열을 넣어서 컴포넌트가 마운트될 때만 실행되게 함\r\n\r\n  // 로딩 중, 에러 처리 및 사용자 정보 표시\r\n  if (loading) {\r\n    return <div>로딩 중...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>오류 발생: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>사용자 정보</h1>\r\n      {userInfo ? (\r\n        <div>\r\n          <p>이름: {userInfo.name}</p>\r\n          <p>이메일: {userInfo.email}</p>\r\n          {/* 다른 사용자 정보도 여기에 표시 */}\r\n        </div>\r\n      ) : (\r\n        <p>사용자 정보를 찾을 수 없습니다.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}