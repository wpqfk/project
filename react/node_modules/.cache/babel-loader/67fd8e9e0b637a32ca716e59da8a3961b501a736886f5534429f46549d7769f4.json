{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qtkdd\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\wpqkf2_project\\\\test\\\\src\\\\pages\\\\Mypage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../component/auth'; // AuthContext에서 가져오기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPage = () => {\n  _s();\n  const {\n    accessToken\n  } = useAuth(); // AuthContext에서 accessToken을 가져옴\n  const [userInfo, setUserInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [profileImage, setProfileImage] = useState(null); // 프로필 이미지 상태\n\n  useEffect(() => {\n    if (!accessToken) {\n      setError('토큰이 없습니다. 로그인 후 다시 시도해주세요.');\n      setLoading(false);\n      return;\n    }\n    const fetchUserInfo = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/mypage', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${accessToken}`\n          }\n        });\n        if (!response.ok) {\n          const errorText = await response.text(); // JSON이 아닌 경우 텍스트로 응답 받기\n          throw new Error(`사용자 정보를 가져오는 데 실패했습니다. 상태 코드: ${response.status}. 응답 내용: ${errorText}`);\n        }\n        const data = await response.json(); // JSON 형식 응답을 처리\n        setUserInfo(data);\n        setProfileImage(data.profileImage); // 서버에서 받은 프로필 이미지 URL로 상태 업데이트\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserInfo();\n  }, [accessToken]);\n\n  // 프로필 사진 업로드 핸들러\n  const handleProfileImageUpload = async e => {\n    const file = e.target.files[0]; // 선택된 파일\n\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        // 로컬에서 파일을 읽은 후 프로필 이미지 상태에 저장\n        setProfileImage(reader.result);\n      };\n      reader.readAsDataURL(file); // 파일을 data URL로 변환\n    }\n    const formData = new FormData();\n    formData.append('profileImage', e.target.files[0]); // 선택된 파일을 formData에 추가\n\n    try {\n      const response = await fetch('http://localhost:8080/uploadProfileImage', {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        },\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('프로필 사진 업로드 실패');\n      }\n      const data = await response.json();\n      alert('프로필 사진이 성공적으로 업로드되었습니다!');\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uC0AC\\uC6A9\\uC790 \\uC815\\uBCF4\\uB97C \\uAC00\\uC838\\uC624\\uB294 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC624\\uB958 \\uBC1C\\uC0DD: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC0AC\\uC6A9\\uC790 \\uC815\\uBCF4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), userInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC774\\uB984: \", userInfo.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC774\\uBA54\\uC77C: \", userInfo.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uD504\\uB85C\\uD544 \\uC0AC\\uC9C4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleProfileImageUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), profileImage && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: profileImage,\n          alt: \"Profile\",\n          width: \"100\",\n          style: {\n            marginTop: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC0AC\\uC6A9\\uC790 \\uC815\\uBCF4\\uB97C \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(MyPage, \"i4PVKc3DRJZ4gOl3H41ARQ2UCxE=\", false, function () {\n  return [useAuth];\n});\n_c = MyPage;\nexport default MyPage;\nvar _c;\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","jsxDEV","_jsxDEV","MyPage","_s","accessToken","userInfo","setUserInfo","loading","setLoading","error","setError","profileImage","setProfileImage","fetchUserInfo","response","fetch","method","headers","ok","errorText","text","Error","status","data","json","message","handleProfileImageUpload","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","formData","FormData","append","Authorization","body","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","name","email","type","onChange","src","alt","width","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/qtkdd/OneDrive/바탕 화면/wpqkf2_project/test/src/pages/Mypage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../component/auth'; // AuthContext에서 가져오기\r\n\r\nconst MyPage = () => {\r\n  const { accessToken } = useAuth();  // AuthContext에서 accessToken을 가져옴\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [profileImage, setProfileImage] = useState(null); // 프로필 이미지 상태\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) {\r\n      setError('토큰이 없습니다. 로그인 후 다시 시도해주세요.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchUserInfo = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/mypage', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${accessToken}`,\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errorText = await response.text(); // JSON이 아닌 경우 텍스트로 응답 받기\r\n          throw new Error(`사용자 정보를 가져오는 데 실패했습니다. 상태 코드: ${response.status}. 응답 내용: ${errorText}`);\r\n        }\r\n\r\n        const data = await response.json(); // JSON 형식 응답을 처리\r\n        setUserInfo(data);\r\n        setProfileImage(data.profileImage); // 서버에서 받은 프로필 이미지 URL로 상태 업데이트\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserInfo();\r\n  }, [accessToken]);\r\n\r\n  // 프로필 사진 업로드 핸들러\r\n  const handleProfileImageUpload = async (e) => {\r\n    const file = e.target.files[0]; // 선택된 파일\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        // 로컬에서 파일을 읽은 후 프로필 이미지 상태에 저장\r\n        setProfileImage(reader.result);\r\n      };\r\n      reader.readAsDataURL(file); // 파일을 data URL로 변환\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('profileImage', e.target.files[0]); // 선택된 파일을 formData에 추가\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8080/uploadProfileImage', {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('프로필 사진 업로드 실패');\r\n      }\r\n\r\n      const data = await response.json();\r\n      alert('프로필 사진이 성공적으로 업로드되었습니다!');\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>사용자 정보를 가져오는 중...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>오류 발생: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>사용자 정보</h1>\r\n      {userInfo ? (\r\n        <div>\r\n          <p>이름: {userInfo.name}</p>\r\n          <p>이메일: {userInfo.email}</p>\r\n          <div>\r\n            <label>프로필 사진</label>\r\n            <input type=\"file\" onChange={handleProfileImageUpload} />\r\n            {/* 이미지 미리보기 */}\r\n            {profileImage && (\r\n              <img src={profileImage} alt=\"Profile\" width=\"100\" style={{ marginTop: '10px' }} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>사용자 정보를 찾을 수 없습니다.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}