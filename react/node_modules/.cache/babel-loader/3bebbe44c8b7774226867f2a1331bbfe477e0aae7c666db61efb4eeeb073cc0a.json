{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qtkdd\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\wpqkf2_project\\\\test\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [id, setId] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false); // 로딩 상태 추가\n\n  const handleLogin = async () => {\n    // 로딩 시작 상태로 변경\n    setIsLoading(true);\n    setMessage(''); // 이전 메시지 초기화\n    console.log('로그인 요청 시작'); // 로그인 요청 시작 로그\n\n    try {\n      const loginData = {\n        id,\n        password\n      };\n\n      // 로그인 요청\n      const response = await fetch('http://localhost:8080/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(loginData),\n        credentials: 'include' // 쿠키를 자동으로 포함\n      });\n\n      // 응답 상태 출력\n      console.log('서버 응답 상태:', response.status); // 서버 응답 상태 코드 출력\n\n      if (!response.ok) {\n        // 오류 발생 시\n        throw new Error('서버문제');\n      }\n      const data = await response.json(); // 서버 응답을 JSON으로 파싱\n      console.log('서버 응답 데이터:', data); // 서버 응답 데이터 출력\n\n      // 서버에서 반환하는 메시지를 확인\n      if (data.message === '로그인 성공!') {\n        setMessage('로그인 성공!');\n        // 로그인 성공 시 필요한 추가 처리 (예: JWT 저장 등)\n        localStorage.setItem('token', data.token); // JWT 토큰을 로컬 스토리지에 저장\n      } else {\n        // 로그인 실패\n        setMessage(data.error || '아이디 또는 패스워드가 잘못되었습니다.');\n      }\n    } catch (error) {\n      console.error('로그인 오류 발생:', error); // 로그인 중 발생한 오류 로그\n      setMessage(error.message); // 오류 메시지를 상태에 저장\n    } finally {\n      // 로딩 상태 해제\n      setIsLoading(false);\n      console.log('로그인 요청 종료'); // 로그인 요청 종료 로그\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC544\\uC774\\uB514\",\n      value: id,\n      onChange: e => setId(e.target.value) // 아이디 입력\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\",\n      value: password,\n      onChange: e => setPassword(e.target.value) // 패스워드 입력\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      disabled: isLoading,\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB85C\\uADF8\\uC778 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"Loe2j3Zn7skzuhkojDVN1iiXYsw=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","id","setId","password","setPassword","message","setMessage","isLoading","setIsLoading","handleLogin","console","log","loginData","response","fetch","method","headers","body","JSON","stringify","credentials","status","ok","Error","data","json","localStorage","setItem","token","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/qtkdd/OneDrive/바탕 화면/wpqkf2_project/test/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Login() {\r\n  const [id, setId] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false); // 로딩 상태 추가\r\n\r\n  const handleLogin = async () => {\r\n    // 로딩 시작 상태로 변경\r\n    setIsLoading(true);\r\n    setMessage(''); // 이전 메시지 초기화\r\n    console.log('로그인 요청 시작'); // 로그인 요청 시작 로그\r\n\r\n    try {\r\n      const loginData = { id, password };\r\n\r\n      // 로그인 요청\r\n      const response = await fetch('http://localhost:8080/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(loginData),\r\n        credentials: 'include', // 쿠키를 자동으로 포함\r\n      });\r\n\r\n      // 응답 상태 출력\r\n      console.log('서버 응답 상태:', response.status); // 서버 응답 상태 코드 출력\r\n\r\n      if (!response.ok) {\r\n        // 오류 발생 시\r\n        throw new Error('서버문제');\r\n      }\r\n\r\n      const data = await response.json(); // 서버 응답을 JSON으로 파싱\r\n      console.log('서버 응답 데이터:', data); // 서버 응답 데이터 출력\r\n\r\n      // 서버에서 반환하는 메시지를 확인\r\n      if (data.message === '로그인 성공!') {\r\n        setMessage('로그인 성공!');\r\n        // 로그인 성공 시 필요한 추가 처리 (예: JWT 저장 등)\r\n        localStorage.setItem('token', data.token); // JWT 토큰을 로컬 스토리지에 저장\r\n      } else {\r\n        // 로그인 실패\r\n        setMessage(data.error || '아이디 또는 패스워드가 잘못되었습니다.');\r\n      }\r\n    } catch (error) {\r\n      console.error('로그인 오류 발생:', error); // 로그인 중 발생한 오류 로그\r\n      setMessage(error.message); // 오류 메시지를 상태에 저장\r\n    } finally {\r\n      // 로딩 상태 해제\r\n      setIsLoading(false);\r\n      console.log('로그인 요청 종료'); // 로그인 요청 종료 로그\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <h2>로그인</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"아이디\"\r\n        value={id}\r\n        onChange={(e) => setId(e.target.value)} // 아이디 입력\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"패스워드\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)} // 패스워드 입력\r\n      />\r\n      <button onClick={handleLogin} disabled={isLoading}>로그인</button>\r\n      {isLoading && <p>로그인 중...</p>} {/* 로딩 중 텍스트 */}\r\n      <p>{message}</p> {/* 로그인 성공/실패 메시지 출력 */}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}