{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qtkdd\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\project\\\\react\\\\src\\\\pages\\\\CreatePosts.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // 페이지 이동을 위한 navigate 훅\nimport { useAuth } from '../component/auth'; // 인증 정보 가져오기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = () => {\n  _s();\n  const [title, setTitle] = useState(''); // 제목 상태\n  const [content, setContent] = useState(''); // 내용 상태\n  const [error, setError] = useState(''); // 오류 상태\n  const [loading, setLoading] = useState(false); // 로딩 상태\n  const {\n    accessToken\n  } = useAuth(); // 인증 토큰 가져오기\n  const navigate = useNavigate(); // 페이지 이동을 위한 navigate 훅\n\n  // 폼 제출 함수\n  const handleSubmit = async e => {\n    e.preventDefault(); // 기본 폼 제출 동작 방지\n\n    // 인증 토큰이 없으면 오류 처리\n    if (!accessToken) {\n      return setError('로그인이 필요합니다.');\n    }\n    setLoading(true); // 로딩 시작\n    setError(''); // 기존 오류 상태 초기화\n\n    try {\n      // 서버로 POST 요청 보내기\n      const response = await fetch('http://localhost:8080/posts', {\n        method: 'POST',\n        // POST 요청\n        headers: {\n          'Content-Type': 'application/json',\n          // JSON 데이터 형식\n          Authorization: `Bearer ${accessToken}` // 인증 토큰 헤더에 추가\n        },\n        body: JSON.stringify({\n          title,\n          content\n        }) // 제목과 내용 데이터를 본문에 포함\n      });\n      if (!response.ok) {\n        throw new Error('게시물 작성에 실패했습니다.'); // 요청 실패 시 오류 메시지\n      }\n      const data = await response.json(); // 서버 응답 받기\n      navigate(`/posts/${data.posts_id}`); // 새 글의 상세 페이지로 이동\n    } catch (error) {\n      setError(error.message); // 오류 처리\n    } finally {\n      setLoading(false); // 로딩 종료\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC0C8 \\uAC8C\\uC2DC\\uBB3C \\uC791\\uC131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uAC8C\\uC2DC\\uBB3C \\uC791\\uC131 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"\\uC81C\\uBAA9:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: e => setTitle(e.target.value) // 제목 입력 처리\n          ,\n          required: true,\n          disabled: loading // 로딩 중에는 입력 불가\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"\\uB0B4\\uC6A9:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"content\",\n          value: content,\n          onChange: e => setContent(e.target.value) // 내용 입력 처리\n          ,\n          required: true,\n          disabled: loading // 로딩 중에는 입력 불가\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: \"\\uAC8C\\uC2DC\\uBB3C \\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePost, \"Dty6klpS8dcItXLGhX1xz/q9w7g=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","useNavigate","useAuth","jsxDEV","_jsxDEV","CreatePost","_s","title","setTitle","content","setContent","error","setError","loading","setLoading","accessToken","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","Error","data","json","posts_id","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","htmlFor","type","id","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/qtkdd/OneDrive/바탕 화면/project/react/src/pages/CreatePosts.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';  // 페이지 이동을 위한 navigate 훅\r\nimport { useAuth } from '../component/auth'; // 인증 정보 가져오기\r\n\r\nconst CreatePost = () => {\r\n  const [title, setTitle] = useState('');  // 제목 상태\r\n  const [content, setContent] = useState('');  // 내용 상태\r\n  const [error, setError] = useState('');  // 오류 상태\r\n  const [loading, setLoading] = useState(false);  // 로딩 상태\r\n  const { accessToken } = useAuth();  // 인증 토큰 가져오기\r\n  const navigate = useNavigate();  // 페이지 이동을 위한 navigate 훅\r\n\r\n  // 폼 제출 함수\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();  // 기본 폼 제출 동작 방지\r\n\r\n    // 인증 토큰이 없으면 오류 처리\r\n    if (!accessToken) {\r\n      return setError('로그인이 필요합니다.');\r\n    }\r\n\r\n    setLoading(true);  // 로딩 시작\r\n    setError('');  // 기존 오류 상태 초기화\r\n\r\n    try {\r\n      // 서버로 POST 요청 보내기\r\n      const response = await fetch('http://localhost:8080/posts', {\r\n        method: 'POST',  // POST 요청\r\n        headers: {\r\n          'Content-Type': 'application/json',  // JSON 데이터 형식\r\n          Authorization: `Bearer ${accessToken}`,  // 인증 토큰 헤더에 추가\r\n        },\r\n        body: JSON.stringify({ title, content }),  // 제목과 내용 데이터를 본문에 포함\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('게시물 작성에 실패했습니다.');  // 요청 실패 시 오류 메시지\r\n      }\r\n\r\n      const data = await response.json();  // 서버 응답 받기\r\n      navigate(`/posts/${data.posts_id}`);  // 새 글의 상세 페이지로 이동\r\n    } catch (error) {\r\n      setError(error.message);  // 오류 처리\r\n    } finally {\r\n      setLoading(false);  // 로딩 종료\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>새 게시물 작성</h1>\r\n      \r\n      {/* 오류 메시지 표시 */}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      \r\n      {/* 로딩 상태 표시 */}\r\n      {loading && <p>게시물 작성 중...</p>}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"title\">제목:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}  // 제목 입력 처리\r\n            required\r\n            disabled={loading}  // 로딩 중에는 입력 불가\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"content\">내용:</label>\r\n          <textarea\r\n            id=\"content\"\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}  // 내용 입력 처리\r\n            required\r\n            disabled={loading}  // 로딩 중에는 입력 불가\r\n          />\r\n        </div>\r\n        <button type=\"submit\" disabled={loading}>게시물 작성</button>  {/* 로딩 중에는 버튼 비활성화 */}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}