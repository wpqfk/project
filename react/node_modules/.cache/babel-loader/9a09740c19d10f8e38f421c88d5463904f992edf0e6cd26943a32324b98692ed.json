{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qtkdd\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\wpqkf2_project\\\\test\\\\src\\\\pages\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [id, setId] = useState(''); // 사용자가 입력하는 아이디 (id)\n  const [email, setEmail] = useState(''); // 사용자가 입력하는 이메일\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [dob, setDob] = useState('');\n  const [message, setMessage] = useState('');\n\n  // 회원가입 처리 함수\n  const handleSignup = async () => {\n    // 모든 필드가 입력되었는지 확인\n    if (id && email && password && name && dob) {\n      const userData = {\n        id,\n        // 사용자가 입력한 아이디\n        email,\n        // 사용자가 입력한 이메일\n        password,\n        name,\n        dob\n      };\n      try {\n        // 서버로 POST 요청 보내기\n        const response = await fetch('localhost:8080/signup', {\n          // 실제 서버 URL로 변경\n          method: 'POST',\n          // POST 요청\n          headers: {\n            'Content-Type': 'application/json' // JSON 형식으로 데이터 전송\n          },\n          body: JSON.stringify(userData) // 폼 데이터 JSON으로 변환하여 전송\n        });\n\n        // 응답이 실패한 경우\n        if (!response.ok) {\n          throw new Error('회원가입 실패, 다시 시도해주세요.');\n        }\n\n        // 응답이 성공적이면\n        const result = await response.json();\n        setMessage(result.message || '회원가입 완료!');\n      } catch (error) {\n        // 에러 발생 시\n        setMessage(error.message || '서버에 문제가 발생했습니다.');\n      }\n    } else {\n      setMessage('모든 필드를 입력해주세요.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC544\\uC774\\uB514\",\n      value: id,\n      onChange: e => setId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"\\uC774\\uBA54\\uC77C\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC774\\uB984\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: dob,\n      onChange: e => setDob(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignup,\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"pedPxYSzsJ1sph67kyaNz92rTIM=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Signup","_s","id","setId","email","setEmail","password","setPassword","name","setName","dob","setDob","message","setMessage","handleSignup","userData","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/qtkdd/OneDrive/바탕 화면/wpqkf2_project/test/src/pages/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Signup() {\r\n  const [id, setId] = useState('');  // 사용자가 입력하는 아이디 (id)\r\n  const [email, setEmail] = useState('');  // 사용자가 입력하는 이메일\r\n  const [password, setPassword] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [dob, setDob] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  // 회원가입 처리 함수\r\n  const handleSignup = async () => {\r\n    // 모든 필드가 입력되었는지 확인\r\n    if (id && email && password && name && dob) {\r\n      const userData = {\r\n        id,    // 사용자가 입력한 아이디\r\n        email, // 사용자가 입력한 이메일\r\n        password,\r\n        name,\r\n        dob,\r\n      };\r\n\r\n      try {\r\n        // 서버로 POST 요청 보내기\r\n        const response = await fetch('localhost:8080/signup', {  // 실제 서버 URL로 변경\r\n          method: 'POST', // POST 요청\r\n          headers: {\r\n            'Content-Type': 'application/json', // JSON 형식으로 데이터 전송\r\n          },\r\n          body: JSON.stringify(userData), // 폼 데이터 JSON으로 변환하여 전송\r\n        });\r\n\r\n        // 응답이 실패한 경우\r\n        if (!response.ok) {\r\n          throw new Error('회원가입 실패, 다시 시도해주세요.');\r\n        }\r\n\r\n        // 응답이 성공적이면\r\n        const result = await response.json();\r\n        setMessage(result.message || '회원가입 완료!');\r\n      } catch (error) {\r\n        // 에러 발생 시\r\n        setMessage(error.message || '서버에 문제가 발생했습니다.');\r\n      }\r\n    } else {\r\n      setMessage('모든 필드를 입력해주세요.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <h2>회원가입</h2>\r\n      \r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"아이디\"\r\n        value={id}\r\n        onChange={(e) => setId(e.target.value)}\r\n      />\r\n      \r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"이메일\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      \r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"패스워드\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      \r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"이름\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      \r\n      <input\r\n        type=\"date\"\r\n        value={dob}\r\n        onChange={(e) => setDob(e.target.value)}\r\n      />\r\n      \r\n      <button onClick={handleSignup}>회원가입</button>\r\n      <p>{message}</p> {/* 서버로부터 받은 메시지 출력 */}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}