{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qtkdd\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\project\\\\react\\\\src\\\\pages\\\\CreatePosts.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // 글 작성 후 페이지 이동을 위해 사용\nimport { useAuth } from '../component/auth'; // useAuth 훅을 통해 accessToken을 가져옵니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = () => {\n  _s();\n  const {\n    accessToken\n  } = useAuth(); // useAuth 훅을 통해 accessToken을 가져옵니다.\n  const [title, setTitle] = useState(''); // 글 제목\n  const [content, setContent] = useState(''); // 글 내용\n  const [error, setError] = useState(null); // 에러 상태\n  const [loading, setLoading] = useState(false); // 로딩 상태\n  const navigate = useNavigate(); // 글 작성 후 페이지 이동을 위한 navigate 함수\n\n  // 폼 제출 함수\n  const handleSubmit = async e => {\n    e.preventDefault(); // 폼 제출 시 페이지 새로고침 방지\n\n    if (!accessToken) {\n      setError('로그인된 사용자가 아닙니다.');\n      return;\n    }\n    setLoading(true); // 로딩 시작\n\n    try {\n      const response = await fetch('http://localhost:8080/posts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${accessToken}` // 헤더에 accessToken 추가\n        },\n        body: JSON.stringify({\n          title,\n          content\n        }) // 작성된 제목과 내용을 서버로 전송\n      });\n      if (!response.ok) {\n        throw new Error('게시물 작성에 실패했습니다.');\n      }\n      const data = await response.json();\n      setLoading(false); // 로딩 끝\n      navigate(`/posts/${data.posts_id}`); // 작성된 글의 상세 페이지로 이동\n    } catch (error) {\n      setLoading(false); // 로딩 끝\n      setError(error.message); // 에러 메시지 설정\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uAE00\\uC744 \\uC791\\uC131 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uAE00 \\uC791\\uC131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"\\uC624\\uB958 \\uBC1C\\uC0DD: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"\\uC81C\\uBAA9:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true,\n          placeholder: \"\\uAE00 \\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"\\uB0B4\\uC6A9:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"content\",\n          value: content,\n          onChange: e => setContent(e.target.value),\n          required: true,\n          placeholder: \"\\uAE00 \\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uAE00 \\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePost, \"fiSdc4r5JdPkYGN6lFalxDfRik0=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","useNavigate","useAuth","jsxDEV","_jsxDEV","CreatePost","_s","accessToken","title","setTitle","content","setContent","error","setError","loading","setLoading","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","Error","data","json","posts_id","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","htmlFor","type","id","value","onChange","target","required","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/qtkdd/OneDrive/바탕 화면/project/react/src/pages/CreatePosts.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // 글 작성 후 페이지 이동을 위해 사용\r\nimport { useAuth } from '../component/auth'; // useAuth 훅을 통해 accessToken을 가져옵니다.\r\n\r\nconst CreatePost = () => {\r\n  const { accessToken } = useAuth(); // useAuth 훅을 통해 accessToken을 가져옵니다.\r\n  const [title, setTitle] = useState(''); // 글 제목\r\n  const [content, setContent] = useState(''); // 글 내용\r\n  const [error, setError] = useState(null); // 에러 상태\r\n  const [loading, setLoading] = useState(false); // 로딩 상태\r\n  const navigate = useNavigate(); // 글 작성 후 페이지 이동을 위한 navigate 함수\r\n\r\n  // 폼 제출 함수\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // 폼 제출 시 페이지 새로고침 방지\r\n\r\n    if (!accessToken) {\r\n      setError('로그인된 사용자가 아닙니다.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true); // 로딩 시작\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8080/posts', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${accessToken}`, // 헤더에 accessToken 추가\r\n        },\r\n        body: JSON.stringify({ title, content }), // 작성된 제목과 내용을 서버로 전송\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('게시물 작성에 실패했습니다.');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setLoading(false); // 로딩 끝\r\n      navigate(`/posts/${data.posts_id}`); // 작성된 글의 상세 페이지로 이동\r\n    } catch (error) {\r\n      setLoading(false); // 로딩 끝\r\n      setError(error.message); // 에러 메시지 설정\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>글을 작성 중...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>글 작성</h1>\r\n      {error && <div style={{ color: 'red' }}>오류 발생: {error}</div>}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"title\">제목:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            required\r\n            placeholder=\"글 제목을 입력하세요\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"content\">내용:</label>\r\n          <textarea\r\n            id=\"content\"\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n            required\r\n            placeholder=\"글 내용을 입력하세요\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\">글 작성</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}