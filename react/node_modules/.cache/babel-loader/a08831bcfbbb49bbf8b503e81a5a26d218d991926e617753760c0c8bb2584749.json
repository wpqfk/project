{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qtkdd\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\wpqkf2_project\\\\test\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\n// src/pages/Login.js\nimport React, { useState } from 'react';\nimport { useAuth } from '../utils/auth'; // 전역 상태를 관리하는 AuthContext\nimport { useNavigate } from 'react-router-dom'; // 페이지 이동을 위한 useNavigate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [id, setId] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    login\n  } = useAuth(); // 로그인 함수 가져오기\n  const navigate = useNavigate(); // 페이지 이동을 위한 navigate 함수\n\n  const handleLogin = async () => {\n    setIsLoading(true);\n    setMessage(''); // 이전 메시지 초기화\n\n    if (!id || !password) {\n      setMessage('아이디와 비밀번호를 입력해주세요.');\n      setIsLoading(false);\n      return;\n    }\n    try {\n      await login(id, password); // 로그인 함수 호출\n      setMessage('로그인 성공!');\n    } catch (error) {\n      setMessage('로그인 실패: ' + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC544\\uC774\\uB514\",\n      value: id,\n      onChange: e => setId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      disabled: isLoading,\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB85C\\uADF8\\uC778 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"dDYhWlqSDhCEyAceLhrr0jmLIjA=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useAuth","useNavigate","jsxDEV","_jsxDEV","Login","_s","id","setId","password","setPassword","message","setMessage","isLoading","setIsLoading","login","navigate","handleLogin","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/qtkdd/OneDrive/바탕 화면/wpqkf2_project/test/src/pages/Login.js"],"sourcesContent":["// src/pages/Login.js\r\nimport React, { useState } from 'react';\r\nimport { useAuth } from '../utils/auth'; // 전역 상태를 관리하는 AuthContext\r\nimport { useNavigate } from 'react-router-dom'; // 페이지 이동을 위한 useNavigate\r\n\r\nfunction Login() {\r\n  const [id, setId] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { login } = useAuth(); // 로그인 함수 가져오기\r\n  const navigate = useNavigate(); // 페이지 이동을 위한 navigate 함수\r\n\r\n  const handleLogin = async () => {\r\n    setIsLoading(true);\r\n    setMessage(''); // 이전 메시지 초기화\r\n\r\n    if (!id || !password) {\r\n      setMessage('아이디와 비밀번호를 입력해주세요.');\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await login(id, password); // 로그인 함수 호출\r\n      setMessage('로그인 성공!');\r\n    } catch (error) {\r\n      setMessage('로그인 실패: ' + error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <h2>로그인</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"아이디\"\r\n        value={id}\r\n        onChange={(e) => setId(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"패스워드\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleLogin} disabled={isLoading}>\r\n        로그인\r\n      </button>\r\n      {isLoading && <p>로그인 중...</p>}\r\n      <p>{message}</p>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,eAAe,CAAC,CAAC;AACzC,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEe;EAAM,CAAC,GAAGd,OAAO,CAAC,CAAC,CAAC,CAAC;EAC7B,MAAMe,QAAQ,GAAGd,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BH,YAAY,CAAC,IAAI,CAAC;IAClBF,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEhB,IAAI,CAACL,EAAE,IAAI,CAACE,QAAQ,EAAE;MACpBG,UAAU,CAAC,oBAAoB,CAAC;MAChCE,YAAY,CAAC,KAAK,CAAC;MACnB;IACF;IAEA,IAAI;MACF,MAAMC,KAAK,CAACR,EAAE,EAAEE,QAAQ,CAAC,CAAC,CAAC;MAC3BG,UAAU,CAAC,SAAS,CAAC;IACvB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdN,UAAU,CAAC,UAAU,GAAGM,KAAK,CAACP,OAAO,CAAC;IACxC,CAAC,SAAS;MACRG,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEV,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACZnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAK;MACjBC,KAAK,EAAEnB,EAAG;MACVoB,QAAQ,EAAGC,CAAC,IAAKpB,KAAK,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACFnB,OAAA;MACEoB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,0BAAM;MAClBC,KAAK,EAAEjB,QAAS;MAChBkB,QAAQ,EAAGC,CAAC,IAAKlB,WAAW,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFnB,OAAA;MAAQ0B,OAAO,EAAEb,WAAY;MAACc,QAAQ,EAAElB,SAAU;MAAAM,QAAA,EAAC;IAEnD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRV,SAAS,iBAAIT,OAAA;MAAAe,QAAA,EAAG;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC7BnB,OAAA;MAAAe,QAAA,EAAIR;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEX;AAACjB,EAAA,CAlDQD,KAAK;EAAA,QAKMJ,OAAO,EACRC,WAAW;AAAA;AAAA8B,EAAA,GANrB3B,KAAK;AAoDd,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}