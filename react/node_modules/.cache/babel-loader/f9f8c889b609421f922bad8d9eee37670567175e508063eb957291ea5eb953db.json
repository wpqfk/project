{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qtkdd\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\wpqkf2_project\\\\test\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [id, setId] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false); // 로딩 상태 추가\n\n  const handleLogin = async () => {\n    setIsLoading(true); // 로그인 요청 시작 시 로딩 상태로 변경\n    setMessage(''); // 이전 메시지 초기화\n\n    try {\n      const response = await fetch('http://localhost:8080/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('서버문제');\n      }\n      const data = await response.json(); // 서버 응답을 JSON으로 파싱\n\n      // 서버에서 반환하는 메시지를 확인\n      if (data.message === '로그인 성공!') {\n        setMessage('로그인 성공!');\n      } else {\n        setMessage(data.error || '아이디 또는 패스워드가 잘못되었습니다.');\n      }\n    } catch (error) {\n      setMessage(error.message); // 오류 메시지를 상태에 저장\n    } finally {\n      setIsLoading(false); // 요청 종료 후 로딩 상태 해제\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC544\\uC774\\uB514\",\n      value: id,\n      onChange: e => setId(e.target.value) // 아이디 입력\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\",\n      value: password,\n      onChange: e => setPassword(e.target.value) // 패스워드 입력\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      disabled: isLoading,\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB85C\\uADF8\\uC778 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"Loe2j3Zn7skzuhkojDVN1iiXYsw=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","id","setId","password","setPassword","message","setMessage","isLoading","setIsLoading","handleLogin","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/qtkdd/OneDrive/바탕 화면/wpqkf2_project/test/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Login() {\r\n  const [id, setId] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false); // 로딩 상태 추가\r\n\r\n  const handleLogin = async () => {\r\n    setIsLoading(true); // 로그인 요청 시작 시 로딩 상태로 변경\r\n    setMessage(''); // 이전 메시지 초기화\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8080/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ id, password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('서버문제');\r\n      }\r\n\r\n      const data = await response.json(); // 서버 응답을 JSON으로 파싱\r\n\r\n      // 서버에서 반환하는 메시지를 확인\r\n      if (data.message === '로그인 성공!') {\r\n        setMessage('로그인 성공!');\r\n      } else {\r\n        setMessage(data.error || '아이디 또는 패스워드가 잘못되었습니다.');\r\n      }\r\n    } catch (error) {\r\n      setMessage(error.message); // 오류 메시지를 상태에 저장\r\n    } finally {\r\n      setIsLoading(false); // 요청 종료 후 로딩 상태 해제\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <h2>로그인</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"아이디\"\r\n        value={id}\r\n        onChange={(e) => setId(e.target.value)} // 아이디 입력\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"패스워드\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)} // 패스워드 입력\r\n      />\r\n      <button onClick={handleLogin} disabled={isLoading}>로그인</button>\r\n      {isLoading && <p>로그인 중...</p>} {/* 로딩 중 텍스트 */}\r\n      <p>{message}</p> {/* 로그인 성공/실패 메시지 출력 */}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}