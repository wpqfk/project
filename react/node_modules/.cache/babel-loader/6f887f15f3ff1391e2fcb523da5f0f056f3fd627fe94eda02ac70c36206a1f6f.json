{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qtkdd\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\wpqkf2_project\\\\test\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { login } from './auth'; // auth.js에서 login 함수 불러오기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [id, setId] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  // 로그인 처리 함수\n  const handleLogin = async () => {\n    setIsLoading(true);\n    setMessage(''); // 이전 메시지 초기화\n\n    // 아이디와 비밀번호 필수 입력값 체크\n    if (!id || !password) {\n      setMessage('아이디와 비밀번호를 입력해주세요.');\n      setIsLoading(false);\n      return;\n    }\n    try {\n      // login 함수 호출 (auth.js에서 가져온 함수)\n      const data = await login(id, password);\n      if (data.message === '로그인 성공!') {\n        setMessage('로그인 성공!');\n        // 로그인 성공 후 추가적인 처리 (예: 페이지 이동, 상태 관리 등)\n        // 예를 들어 로그인 후 대시보드로 리디렉션 할 수 있습니다.\n      }\n    } catch (error) {\n      setMessage('로그인 실패: ' + error.message); // 에러 메시지 표시\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC544\\uC774\\uB514\",\n      value: id,\n      onChange: e => setId(e.target.value) // 아이디 입력\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\",\n      value: password,\n      onChange: e => setPassword(e.target.value) // 패스워드 입력\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      disabled: isLoading,\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB85C\\uADF8\\uC778 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"Loe2j3Zn7skzuhkojDVN1iiXYsw=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","login","jsxDEV","_jsxDEV","Login","_s","id","setId","password","setPassword","message","setMessage","isLoading","setIsLoading","handleLogin","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/qtkdd/OneDrive/바탕 화면/wpqkf2_project/test/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { login } from './auth'; // auth.js에서 login 함수 불러오기\r\n\r\nfunction Login() {\r\n  const [id, setId] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // 로그인 처리 함수\r\n  const handleLogin = async () => {\r\n    setIsLoading(true);\r\n    setMessage(''); // 이전 메시지 초기화\r\n\r\n    // 아이디와 비밀번호 필수 입력값 체크\r\n    if (!id || !password) {\r\n      setMessage('아이디와 비밀번호를 입력해주세요.');\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // login 함수 호출 (auth.js에서 가져온 함수)\r\n      const data = await login(id, password);\r\n\r\n      if (data.message === '로그인 성공!') {\r\n        setMessage('로그인 성공!');\r\n        // 로그인 성공 후 추가적인 처리 (예: 페이지 이동, 상태 관리 등)\r\n        // 예를 들어 로그인 후 대시보드로 리디렉션 할 수 있습니다.\r\n      }\r\n    } catch (error) {\r\n      setMessage('로그인 실패: ' + error.message); // 에러 메시지 표시\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <h2>로그인</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"아이디\"\r\n        value={id}\r\n        onChange={(e) => setId(e.target.value)} // 아이디 입력\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"패스워드\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)} // 패스워드 입력\r\n      />\r\n      <button onClick={handleLogin} disabled={isLoading}>\r\n        로그인\r\n      </button>\r\n      {isLoading && <p>로그인 중...</p>} {/* 로딩 중 텍스트 */}\r\n      <p>{message}</p> {/* 로그인 성공/실패 메시지 출력 */}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}