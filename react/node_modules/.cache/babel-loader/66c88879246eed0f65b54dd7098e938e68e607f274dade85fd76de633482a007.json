{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qtkdd\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\project\\\\react\\\\src\\\\pages\\\\postDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'; // URL 파라미터에서 게시물 ID를 가져오기 위해 사용\nimport { useAuth } from '../component/auth'; // useAuth 훅을 통해 accessToken을 가져옵니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // URL 파라미터에서 게시물 ID 가져오기\n  const {\n    accessToken\n  } = useAuth(); // useAuth 훅을 사용해 accessToken을 가져옵니다.\n  const [post, setPost] = useState(null); // 게시물 상세 정보 상태\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // 서버에서 게시물 상세 정보를 가져오는 함수\n  const getPostDetails = async () => {\n    if (!accessToken) {\n      setError('로그인된 사용자가 아닙니다.');\n      setLoading(false);\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8080/posts/${id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${accessToken}` // 헤더에 accessToken 추가\n        }\n      });\n      if (!response.ok) {\n        throw new Error('게시물 정보를 가져오는 데 실패했습니다.');\n      }\n      const data = await response.json();\n      setPost(data); // 가져온 게시물 상세 정보를 상태에 저장\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 컴포넌트가 마운트될 때 게시물 상세 정보를 가져옵니다.\n  useEffect(() => {\n    if (accessToken) {\n      getPostDetails(); // accessToken이 있을 때만 호출\n    } else {\n      setLoading(false); // accessToken이 없으면 로딩을 끝냄\n    }\n  }, [accessToken, id]); // accessToken과 id가 변경될 때마다 실행\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uAC8C\\uC2DC\\uBB3C \\uC815\\uBCF4\\uB97C \\uAC00\\uC838\\uC624\\uB294 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC624\\uB958 \\uBC1C\\uC0DD: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 게시물 상세 정보 렌더링\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC791\\uC131 \\uC2DC\\uAC04: \", new Date(post.time).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC88B\\uC544\\uC694: \", post.likes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(PostDetail, \"3l8o+9/wd87bLsiJT4uLPJNeELM=\", false, function () {\n  return [useParams, useAuth];\n});\n_c = PostDetail;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useAuth","jsxDEV","_jsxDEV","PostDetail","_s","id","accessToken","post","setPost","loading","setLoading","error","setError","getPostDetails","response","fetch","method","headers","Authorization","ok","Error","data","json","message","children","fileName","_jsxFileName","lineNumber","columnNumber","title","content","Date","time","toLocaleString","likes","_c","$RefreshReg$"],"sources":["C:/Users/qtkdd/OneDrive/바탕 화면/project/react/src/pages/postDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'; // URL 파라미터에서 게시물 ID를 가져오기 위해 사용\r\nimport { useAuth } from '../component/auth'; // useAuth 훅을 통해 accessToken을 가져옵니다.\r\n\r\nconst PostDetail = () => {\r\n  const { id } = useParams(); // URL 파라미터에서 게시물 ID 가져오기\r\n  const { accessToken } = useAuth(); // useAuth 훅을 사용해 accessToken을 가져옵니다.\r\n  const [post, setPost] = useState(null); // 게시물 상세 정보 상태\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // 서버에서 게시물 상세 정보를 가져오는 함수\r\n  const getPostDetails = async () => {\r\n    if (!accessToken) {\r\n      setError('로그인된 사용자가 아닙니다.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/posts/${id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${accessToken}`, // 헤더에 accessToken 추가\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('게시물 정보를 가져오는 데 실패했습니다.');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setPost(data); // 가져온 게시물 상세 정보를 상태에 저장\r\n    } catch (error) {\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 컴포넌트가 마운트될 때 게시물 상세 정보를 가져옵니다.\r\n  useEffect(() => {\r\n    if (accessToken) {\r\n      getPostDetails(); // accessToken이 있을 때만 호출\r\n    } else {\r\n      setLoading(false); // accessToken이 없으면 로딩을 끝냄\r\n    }\r\n  }, [accessToken, id]); // accessToken과 id가 변경될 때마다 실행\r\n\r\n  if (loading) {\r\n    return <div>게시물 정보를 가져오는 중...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>오류 발생: {error}</div>;\r\n  }\r\n\r\n  // 게시물 상세 정보 렌더링\r\n  return (\r\n    <div>\r\n      <h1>{post.title}</h1>\r\n      <p>{post.content}</p>\r\n      <p>작성 시간: {new Date(post.time).toLocaleString()}</p>\r\n      <p>좋아요: {post.likes}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}